on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: false
  schedule:
    - cron: '00 10 * * *'
    
permissions:
  contents: read
  security-events: write
  actions: read
  
jobs:
# secret detection security scanner
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: gitleaks-action
        uses: zricethezav/gitleaks-action@v1.6.0
          
  # sonarcloud sast scanner
  #sonarcloud:
  #  name: sonarcloud
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #      with:
  #        fetch-depth: 0  
  #    - name: SonarCloud Scan
  #      uses: SonarSource/sonarcloud-github-action@master
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
  #        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  semgrep:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: semgrep
    runs-on: ubuntu-latest
    steps:
      # Checkout project source
      - uses: actions/checkout@v3

      # Scan code using project's configuration on https://semgrep.dev/manage
      - uses: returntocorp/semgrep-action@fcd5ab7459e8d91cb1777481980d1b18b4fc6735
        with:
          publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}
          # publishDeployment: ${{ secrets.SEMGREP_DEPLOYMENT_ID }}
          generateSarif: "1"

      # Upload SARIF file generated in previous step
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif
        if: always()
