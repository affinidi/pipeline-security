on:
  workflow_call:
    secrets:
      SEMGREP_APP_TOKEN:
        required: true
      GITLEAKS_LICENSE:
        required: true

  schedule:
    - cron: '00 10 * * *'
    
permissions:
  contents: read
  security-events: write
  actions: read
  
jobs:
# secret detection security scanner
  gitleaks:
    name: gitleaks  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: gitleaks-action
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts
          
# semgrep sast
  semgrep:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: semgrep
    runs-on: ubuntu-latest
    steps:
      # Checkout project source
      - uses: actions/checkout@v3

      # Scan code using project's configuration on https://semgrep.dev/manage
      - uses: returntocorp/semgrep-action@v1
        with:
          publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}
          # publishDeployment: ${{ secrets.SEMGREP_DEPLOYMENT_ID }}
          generateSarif: "1"
          ref: ${{ github.event.pull_request.head.sha }}

      # Upload SARIF file generated in previous step
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif
        if: always()

# dependency scanning
  dependency-review:
      runs-on: ubuntu-latest
      steps:
        - name: 'Checkout Repository'
          uses: actions/checkout@v3
        - name: 'Dependency Review'
          uses: actions/dependency-review-action@v2


